{"remainingRequest":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\TWINCODE\\twincode-front\\src\\pages\\ExerciseConfiguration.vue?vue&type=template&id=239b99ec&","dependencies":[{"path":"F:\\TWINCODE\\twincode-front\\src\\pages\\ExerciseConfiguration.vue","mtime":1627496094464},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}