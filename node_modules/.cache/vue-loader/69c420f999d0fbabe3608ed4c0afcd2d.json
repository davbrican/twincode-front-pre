{"remainingRequest":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\TWINCODE\\twincode-front\\src\\components\\Card.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\TWINCODE\\twincode-front\\src\\components\\Card.vue","mtime":1625729624000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgc2Vzc2lvbk5hbWU6IFN0cmluZywKICAgIGFjdGl2ZTogQm9vbGVhbiwKICAgIHJlZ2lzdGVyZWRVc2VyczogTnVtYmVyLAogICAgZW52aXJvbm1lbnQ6IFN0cmluZywKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uUmVzZXQoKSB7CiAgICAgIGZldGNoKHByb2Nlc3MuZW52LlZVRV9BUFBfVENfQVBJICsgIi9yZXNldFNlc3Npb24iLCB7CiAgICAgICAgbWV0aG9kOiAiUE9TVCIsIC8vIG9yICdQVVQnCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBzZXNzaW9uOiB0aGlzLnNlc3Npb25OYW1lIH0pLCAvLyBkYXRhIGNhbiBiZSBgc3RyaW5nYCBvciB7b2JqZWN0fSEKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgQXV0aG9yaXphdGlvbjogbG9jYWxTdG9yYWdlLmFkbWluU2VjcmV0LAogICAgICAgIH0sCiAgICAgIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgIGFsZXJ0KCJTZXNzaW9uIHJlc3RhcnRlZCBzdWNjZXNzZnVsbHkiKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGxvYWRTZXNzaW9uRGV0YWlscygpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6IGAvYWRtaW5pc3RyYXRpb24vc2Vzc2lvbnMvJHt0aGlzLnNlc3Npb25OYW1lfWAsCiAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Card.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container text-center\">\n    <div\n      class=\"shadow-lg w-full h-48 rounded-lg max-w-xs inline-block text-left\"\n    >\n      <div class=\"flex mt-5 ml-8 mr-8 items-center\">\n        <h1 class=\"font-bold text-lg\">\n          {{ sessionName }}\n        </h1>\n        <div v-if=\"environment === 'local'\" class=\"flex-none flex ml-2 \">\n          <div class=\"rounded-full h-2 w-2 bg-red-500 inline-block\"></div>\n          <!--<p class=\"text-red-500 inline text-xs\">\n            Local\n          </p>-->\n        </div>\n        <div class=\"text-right flex-grow\">\n          <h1\n            class=\"font-bold text-lg\"\n            :class=\"active ? 'text-green-400' : 'text-gray-500'\"\n          >\n            {{ active ? \"Active\" : \"Inactive\" }}\n          </h1>\n        </div>\n      </div>\n      <p class=\"font-bold text-lg ml-8 mt-5\">\n        {{ registeredUsers }} registered users\n      </p>\n      <div class=\"flex mt-5 ml-8 mr-8 items-center justify-between\">\n        <button\n          class=\"rounded-full bg-orange-400 p-2 w-full font-bold m-2 focus:outline-none focus:shadow-outline\"\n          @click=\"loadSessionDetails()\"\n        >\n          View\n        </button>\n        <button\n          @click=\"onReset\"\n          class=\"rounded-full bg-gray-400 p-2 w-full font-bold m-2 focus:outline-none focus:shadow-outline\"\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    sessionName: String,\n    active: Boolean,\n    registeredUsers: Number,\n    environment: String,\n  },\n  methods: {\n    onReset() {\n      fetch(process.env.VUE_APP_TC_API + \"/resetSession\", {\n        method: \"POST\", // or 'PUT'\n        body: JSON.stringify({ session: this.sessionName }), // data can be `string` or {object}!\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.adminSecret,\n        },\n      }).then((response) => {\n        if (response.status == 200) {\n          alert(\"Session restarted successfully\");\n        }\n      });\n    },\n    loadSessionDetails() {\n      this.$router.push({\n        path: `/administration/sessions/${this.sessionName}`,\n      });\n    },\n  },\n};\n</script>\n\n<style></style>\n"]}]}