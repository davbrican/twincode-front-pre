{"remainingRequest":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\TWINCODE\\twincode-front\\src\\components\\Table.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\TWINCODE\\twincode-front\\src\\components\\Table.vue","mtime":1625729624000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\TWINCODE\\twincode-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnRib2R5ID4gdHIuc2VsZWN0YWJsZSB7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["Table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA","file":"Table.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <table class=\"table-auto\">\n    <thead>\n      <tr>\n        <th v-for=\"(title, index) in head\" class=\"px-4 py-2\" :key=\"index\">\n          {{ title }}\n        </th>\n      </tr>\n    </thead>\n    <tbody ref=\"table\">\n      <tr\n        v-for=\"(row, indexRow) in body\"\n        :key=\"indexRow\"\n        :id=\"indexRow\"\n        :class=\"computeRowClass(indexRow)\"\n        @click=\"clickOnRow\"\n      >\n        <td\n          v-for=\"(cell, index) in row\"\n          :key=\"index\"\n          class=\"border px-4 py-2\"\n          :class=\"invisible.includes(index) ? 'hidden' : ''\"\n        >\n          <span\n            v-if=\"cell !== true && cell !== false\"\n            style=\"pointer-events: none\"\n          >\n            {{ cell }}\n          </span>\n          <span v-else>\n            <div\n              class=\"rounded-full w-3 h-3 mx-auto\"\n              :class=\"cell === true ? 'bg-green-500' : 'bg-gray-500'\"\n            ></div>\n          </span>\n        </td>\n        <td\n          v-for=\"(action, index) in actions\"\n          :key=\"index\"\n          class=\"border px-4 py-2\"\n        >\n          <img\n            @click=\"$emit(action.eventName, body[indexRow][action.key])\"\n            :src=\"action.icon\"\n            class=\"w-5 cursor-pointer mx-auto\"\n          />\n        </td>\n      </tr>\n      <tr v-if=\"body.length == 0\">\n        <td\n          v-for=\"(cell, index) in head\"\n          :key=\"index\"\n          class=\"border px-4 py-2 bg-gray-100 font-thin text-center\"\n        >\n          -\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script>\nexport default {\n  props: {\n    head: Array,\n    body: Array,\n    value: Number,\n    actions: Array,\n    invisible: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      rowClassList: \"\",\n    };\n  },\n  methods: {\n    clickOnRow(event) {\n      this.$refs.table.childNodes.forEach((element) => {\n        if (element.classList) element.classList.remove(\"bg-blue-300\");\n      });\n      if (this.value >= 0) {\n        event.target.parentElement.classList.toggle(\"bg-blue-300\");\n        this.$emit(\"input\", parseInt(event.target.parentElement.id));\n      }\n    },\n    computeRowClass(row) {\n      let classList = \"\";\n      if (row % 2 == 0) {\n        classList += \"bg-gray-100 \";\n      }\n      if (this.value >= 0) {\n        classList += \"selectable \";\n      }\n      if (this.value == row) {\n        classList += \"bg-blue-300 \";\n      }\n      return classList;\n    },\n  },\n};\n</script>\n\n<style>\ntbody > tr.selectable {\n  cursor: pointer;\n}\n</style>\n"]}]}